<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python基础-预备知识</title>
    <link href="/posts/32360/"/>
    <url>/posts/32360/</url>
    
    <content type="html"><![CDATA[<h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><p>Python是由<strong>吉多.范罗苏姆</strong>(Guido van Rossum)创造的一门独特的程序设计语言。Python是一门<strong>完全面向对象</strong>的语言,它遵循优雅、明确、简单的设计哲学。</p><p>Python语言具有简单易学、开源、面向对象等优点，但与C&#x2F;C++相比，它的运行速度较慢，同时这门语言对格式的要求极为严格。</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><h3 id="编译与解释"><a href="#编译与解释" class="headerlink" title="编译与解释"></a>编译与解释</h3><p>计算机无法直接执行使用高级语言编写的源程序，只能够识别执行低级的机器指令，因此需要一种翻译程序，将源程序转化为CPU能够执行的机器指令。翻译方式可以分为解释和编译两种，具体运行过程见下图。</p><p><img src="/../images/Python%E5%9F%BA%E7%A1%80-%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86-compile.png" alt="编译与解释"></p><p><strong>编译</strong>是先将整个程序源代码翻译为等价的机器语言或者汇编语言格式的目标程序，之后再由CPU执行，例如C、C++等。<strong>解释</strong>是逐行翻译源程序，每翻译一句，CPU就执行一句，不产生目标代码，例如R、Python等。</p><p><strong>编译型语言的执行速度快，解释型语言跨平台性能好</strong>，而Java的跨平台是通过虚拟机实现的。</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>调试方法：在某一行设置一个断点，当程序执行到断点时暂时停止继续执行，之后通过单步调试继续向下执行。</p><p>程序断点原理：断点（breakpoint）的本质是一个<strong>中断信号</strong>，CPU执行至断点时产生中断，由调试器将程序挂起，此时程序并没有终止或者结束。</p><p>常用的调试器提供了多种单步调试方式：</p><ol><li>step into：进入子函数内部并继续单步执行</li><li>step over：不会进入子函数内部单步执行，而是把整个子函数当作一步执行</li><li>step out：将子函数中剩余部分执行完，返回上一级函数，与step into配合使用</li></ol><h3 id="Python程序排错"><a href="#Python程序排错" class="headerlink" title="Python程序排错"></a>Python程序排错</h3><ol><li>每行代码完成一个动作，因此不能把多条语句写在同一行。</li><li>缩进错误。（由于对格式的严格要求，Python语言也被称为“<strong>游标卡尺语言</strong>”）</li></ol><h3 id="Python执行方式"><a href="#Python执行方式" class="headerlink" title="Python执行方式"></a>Python执行方式</h3><ol><li>解释器 </li><li>交互式shell。默认shell适用于学习&#x2F;验证Python的语法或者局部代码</li><li>IPython交互式shell</li><li>IDE。例如Pycharm、Anaconda等</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>First Article</title>
    <link href="/posts/43398/"/>
    <url>/posts/43398/</url>
    
    <content type="html"><![CDATA[<p>Welcome to my blog！This is my first article.</p><p>我其实很早就想搭建一个个人博客，但是由于各种事情一直没能实现。考完研之后这一想法再次涌上心头，于是花了一天时间终于把各种软件的安装和配置给弄完了。下面就将用到一些教程和注意事项贴出。</p><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><p>我主要是按照这两篇教程一步一步操作的，从Git、nodejs、hexo的安装到将个人博客部署到github。这两篇教程对新手十分友好。</p><p><a href="https://cloud.tencent.com/developer/article/1373210">一文教会你如何搭建个人博客</a><br><a href="https://blog.csdn.net/sparkstark/article/details/124967315">Hexo个人博客安装及配置</a></p><p>第一篇文章中最核心的部分是<strong>将博客部署到远端</strong>（即github），但是按照该文章的步骤会报错。原因是没有配置用户的电子邮件地址和个人名，为此在部署前需要在bash中输入以下命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">$ git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;2210749324@qq.com&quot;</span><br>$ git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;Wangfuxun&quot;</span><br></code></pre></td></tr></table></figure><p>–global表示修改用户主目录下的配置信息，如果不含这一项，修改的仅为当前文件夹blog下的_config文件中的配置信息。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li><p>在下载Git时，建议下载旧版本，比如2.38.0&#x2F;2.38.1，因为最新版2.39.0有bug，可能无法将博客部署到github（本人已踩过坑）。</p></li><li><p>Git官网下载非常慢，建议直接在镜像网站（比如淘宝）下载。</p></li><li><p>在部署时，遇到了一些问题，其解决方法如下，亲测好用。</p></li></ol><p><a href="https://blog.csdn.net/lvoelife/article/details/127370301">一文解决OpenSSL SSL_read: Connection was reset, errno 10054问题</a><br><a href="https://blog.csdn.net/m0_66695483/article/details/125036055">解决Failed to connect to github.com port 443: Timed out</a></p><ol start="4"><li>为了使文章有唯一的编号，使用了abbrlink插件生成文章链接。需要注意在hexo配置文件_config中修改permalink时需要注意加上末尾的&#x2F;，如果缺失，文章链接会变为下载链接。</li></ol><p><a href="https://blog.csdn.net/m0_51755720/article/details/127996199">Hexo使用Abbrlink插件生成文章固定编号链接</a></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>在写博客时需要使用到markdown语法，非常简单，并且支持HTML标签。<a href="https://www.jianshu.com/p/191d1e21f7ed">Markdown基本语法</a></p><p>为了导入本地图片，需要先在source目录下创建一个文件夹images用于存放。加载图片格式如下,本地路径使用绝对路径或相对路径均可，例如：E:&#x2F;MyBlog&#x2F;blog&#x2F;source&#x2F;images&#x2F;test.png或者..&#x2F;images&#x2F;test.png。</p><p><code>![图片题注](图片存放路径)</code> </p><p>在Hexo官方文档中对写作&#x2F;生成静态文档&#x2F;配置等内容都有详细的介绍，有需要的话可以查看</p><p><a href="https://hexo.io/docs/">Documentation</a></p><p>以后我会不定期地在博客中更新自己的各种学习笔记。最后作为小白，我会努力向各位优秀的大佬学习，争取成为一个好的程序员，欢迎各位大佬指正不足。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
